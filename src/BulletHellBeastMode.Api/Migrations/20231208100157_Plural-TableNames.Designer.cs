// <auto-generated />
using System;
using BulletHellBeastMode.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BulletHellBeastMode.Api.Migrations
{
    [DbContext(typeof(BulletHellContext))]
    [Migration("20231208100157_Plural-TableNames")]
    partial class PluralTableNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BulletHellBeastMode.Api.Entities.RefreshTokenFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Expires")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokenFamilies");
                });

            modelBuilder.Entity("BulletHellBeastMode.Api.Entities.UsedRefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RefreshTokenFamilyId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RefreshTokenFamilyId");

                    b.ToTable("UsedRefreshTokens");
                });

            modelBuilder.Entity("BulletHellBeastMode.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BulletHellBeastMode.Api.Entities.UserEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("DateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("BulletHellBeastMode.Api.Entities.RefreshTokenFamily", b =>
                {
                    b.HasOne("BulletHellBeastMode.Api.Entities.User", null)
                        .WithMany("RefreshTokenFamilies")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BulletHellBeastMode.Api.Entities.UsedRefreshToken", b =>
                {
                    b.HasOne("BulletHellBeastMode.Api.Entities.RefreshTokenFamily", null)
                        .WithMany("UsedRefreshTokens")
                        .HasForeignKey("RefreshTokenFamilyId");
                });

            modelBuilder.Entity("BulletHellBeastMode.Api.Entities.UserEvent", b =>
                {
                    b.HasOne("BulletHellBeastMode.Api.Entities.User", null)
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BulletHellBeastMode.Api.Entities.RefreshTokenFamily", b =>
                {
                    b.Navigation("UsedRefreshTokens");
                });

            modelBuilder.Entity("BulletHellBeastMode.Api.Entities.User", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("RefreshTokenFamilies");
                });
#pragma warning restore 612, 618
        }
    }
}
